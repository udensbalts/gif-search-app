// Mocks generated by Mockito 5.4.5 from annotations
// in gif_search_app/test/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:gif_search_app/features/search/data/giphy_api_service.dart'
    as _i2;
import 'package:gif_search_app/features/search/domain/gif_model.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [GiphyApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockGiphyApiService extends _i1.Mock implements _i2.GiphyApiService {
  MockGiphyApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.GifModel>> fetchGifs({
    required String? query,
    int? limit = 25,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#fetchGifs, [], {
              #query: query,
              #limit: limit,
              #offset: offset,
            }),
            returnValue: _i3.Future<List<_i4.GifModel>>.value(<_i4.GifModel>[]),
          )
          as _i3.Future<List<_i4.GifModel>>);
}
